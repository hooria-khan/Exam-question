#include <iostream>
using namespace std;

class node{
	public:
	int P_id;
	node *next;
	node *prev;
	
	node(int id){
		P_id=id;
		next=NULL;
		prev=NULL;
	}
};

class ERqueue{
	public:
		node *head;
		node *tail;
		
		ERqueue()
		{
			head=NULL;
			tail=NULL;
		}
		void insertAtBeg(int id)
		{
			node *newNode=new node(id);
			if(head==NULL)
			{
				head=tail=newNode;
			}
			else
			{
				newNode->next=head;
				head->prev=newNode;
				head=newNode;
			}
		}
		
		void insertEnd(int id)
		{
			node *newNode=new node(id);
			if(head==NULL)
			{
				cout<<"The list is empty..../n Insertion at end is not possible."<<endl;
			}
			else
			{
				tail->next=newNode;
				newNode->prev=tail;
				tail=newNode;
			}
			cout<<"Inserted patiend at the end is:"<<id<<endl;	
		}
		
		void insertpos(int id, int pos)
		{
			node *newNode=new node(id);
			if(pos <= 1 || head==NULL)
			{
				cout<<"The list is empty.... /n The inserted id at specific position is not possible."<<endl;
				cout<<"Insert at beginning first..."<<endl;
				insertAtBeg(id);
				return;
			}
			node *temp = head;
			int count=1;
			
			while(temp->next!= NULL && count< pos-1)
			{
				temp = temp->next;
				count++;
			}
			if(temp->next== NULL)
			{
				insertEnd(id);
				return;
			}
			newNode=new node(id);
			newNode->next=temp->next;
			newNode->prev=temp;
			temp->next->prev=newNode;
			temp->next=newNode;
			
			cout<<"The pateint id "<<id<<"is inserted at position "<<pos<<endl;
		}
		
		void delFromBeg()
		{
			if(head == NULL)
			{
				cout<<"The list is empty...Nothing to delete!"<<endl;
				return;
			}
			node *temp =head;
			
			if(head == tail)
			{
				head=tail=NULL;
			}
			else
			{
				head=head->next;
				head->prev=NULL;
			}
			cout<<"Deleted Patient: "<<temp->P_id<<"from beginning..."<<endl;
			delete temp;
		}
		void display()
		{
			node *temp=head;
			cout<<"List of emergency patients:"<<endl;
			while(temp != NULL)
			{
				cout<<"Patient's ID; "<<temp->P_id<<endl;
				temp=temp->next;
			}
			cout<<endl;
		}
		void disBack()
		{
			node *temp=tail;
			cout<<"Backward: "<<endl;
			while(temp != NULL)
			{
				cout<<temp->P_id<<endl;
				temp=temp->prev;
			}
			cout<<endl;
		}
};

int main(int argc, char** argv) {
	
	ERqueue er;
	int a;
	cout<<"Enter the number of those Patients that are Serious and need Emergency Treatment:";
	cin>>a;
	for(int i=0;i<a;i++)
	{
		int b;
		cout<<"Enter the id for patient"<<i+1<<":";
		cin>>b;
		er.insertAtBeg(b);
		cout<<"The inserted ID at position "<<i+1<<" is: "<<b<<endl;	
	}
	cout<<" "<<endl;
	er.display();
	int i;
	cout<<"Enter the id of patient that you can treat later and are not serious(At End): ";
	cin>>i;
	er.insertEnd(i);
	er.display();
	int x,y;
	cout<<"Insert the patient's ID that you wants to add at a Specific Position:";
	cout<<"ID:";
	cin>>x;
	cout<<"At which position? ";
	cin>>y;
	er.insertpos(x,y);
	er.display();
	er.disBack();
	er.delFromBeg();
	er.display();
	return 0;
}
